{"data":{"type":"contents","id":"applications/index","attributes":{"content":"Every Ember application is represented by a class that extends [`Application`](https://api.emberjs.com/ember/release/classes/Application).\nThis class is used to declare and configure the many objects that make up your app.\n\nAs your application boots,\nit creates an [`ApplicationInstance`](https://api.emberjs.com/ember/release/classes/ApplicationInstance) that is used to manage its stateful aspects.\nThis instance acts as the \"owner\" of objects instantiated for your app.\n\nEssentially, the `Application` *defines your application*\nwhile the `ApplicationInstance` *manages its state*.\n\nThis separation of concerns not only clarifies the architecture of your app,\nit can also improve its efficiency.\nThis is particularly true when your app needs to be booted repeatedly during testing\nand / or server-rendering (e.g. via [FastBoot](https://github.com/tildeio/ember-cli-fastboot)).\nThe configuration of a single `Application` can be done once\nand shared among multiple stateful `ApplicationInstance` instances.\nThese instances can be discarded once they're no longer needed\n(e.g. when a test has run or FastBoot request has finished).","description":"Every Ember application is represented by a class that extends Application. This class is used to declare and configure the many objects that make up your app. \n\nAs your application boots, it creates an ApplicationInstance that is used to manage its..."}}}