{"data":{"type":"contents","id":"configuring-ember/feature-flags","attributes":{"content":"New features are added to Ember.js within conditional statements.\n\nCode behind these flags can be conditionally enabled\n(or completely removed) based on your project's configuration. This\nallows newly developed features to be selectively released when the\nEmber.js community considers them ready for production use.\n\n## Feature Life-Cycle\nA newly-flagged feature is only available in canary builds and can be enabled\nat runtime through your project's configuration file.\n\nAt the start of a beta cycle the Ember core team evaluates each new feature.\nFeatures deemed stable are made available in the next beta and enabled by default.\n\nBeta features that receive negative feedback from the community are disabled in the next beta point\nrelease, and are not included in the next stable release. They may still be included\nin the next beta cycle if the issues/concerns are resolved.\n\nOnce the beta cycle has completed, the next stable release will include any features that\nwere enabled during the beta cycle. At this point the feature flags will be removed from\nthe canary and future beta branches, and the feature becomes part of the framework.\n\n## Flagging Details\nThe flag status in the generated build is controlled by the [`@ember/canary-features`](https://github.com/emberjs/ember.js/blob/master/packages/@ember/canary-features/index.ts)\npackage. This package exports a list of all available features and their current status.\n\nA feature can have one of a three flags:\n\n* `true` - The feature is **present** and **enabled**: the code behind the flag is always enabled in\n  the generated build.\n* `null` - The feature is **present** but **disabled** in the build output. It must be enabled at\n  runtime.\n* `false` - The feature is entirely **disabled**: the code behind the flag is not present in\n  the generated build.\n\nThe process of removing the feature flags from the resulting build output is\nhandled by [`defeatureify`](https://github.com/thomasboyt/defeatureify).\n\n## Feature Listing ([`FEATURES.md`](https://github.com/emberjs/ember.js/blob/master/FEATURES.md))\n\nWhen a developer adds a new feature to the `canary` channel (i.e. the `master` branch on GitHub), they\nalso add an entry to [`FEATURES.md`](https://github.com/emberjs/ember.js/blob/master/FEATURES.md)\nexplaining what the feature does, and linking to their originating pull request.\nThis list is kept current, and reflects what is available in each channel\n(`release`, `beta`, and `canary`).\n\n## Enabling At Runtime\nWhen using the Ember.js canary or beta builds you can enable a \"**present** but **disabled**\"\nfeature by setting its flag value to `true` before your application boots:\n\n```javascript {data-filename=config/environment.js}\nlet ENV = {\n  EmberENV: {\n    FEATURES: {\n      'link-to': true\n    }\n  }\n};\n```\n\nFor the truly ambitious developer, setting `ENV.EmberENV.ENABLE_OPTIONAL_FEATURES` to `true` will enable all\nexperimental features.","description":"New features are added to Ember.js within conditional statements. \n\nCode behind these flags can be conditionally enabled (or completely removed) based on your project's configuration. This allows newly developed features to be selectively released when the..."}}}