{"data":{"type":"contents","id":"tutorial/part-1/recap","attributes":{"content":"<!-- Heads up! This is a generated file, do not edit directly. You can find the source at https://github.com/ember-learn/super-rentals-tutorial/blob/master/src/markdown/tutorial/part-1/recap.md -->\n\nCongratulations, you finished the first part of this tutorial!\n\nIt was quite a journey! To recap, here is what you have learned:\n\n<!-- Using ### [Chapter 1](../orientation/) triggers some sort of rendering bug -->\n\n<h3><a href=\"../orientation/\">Chapter 1</a></h3>\n\n- Installing Ember CLI\n- Creating a new Ember app with Ember CLI\n- Starting and stopping the development server\n- Editing files and live reload\n- Working with HTML, CSS and assets in an Ember app\n\n<h3><a href=\"../building-pages/\">Chapter 2</a></h3>\n\n- Defining routes\n- Using route templates\n- Customizing URLs\n- Linking pages with the `<LinkTo>` component\n- Passing arguments and attributes to components\n\n<h3><a href=\"../automated-testing/\">Chapter 3</a></h3>\n\n- The purpose of automated testing\n- Writing acceptance tests\n- Using generators in Ember CLI\n- Testing with the QUnit test framework\n- Working with Ember's test helpers\n- Practicing the testing workflow\n\n<h3><a href=\"../component-basics/\">Chapter 4</a></h3>\n\n- Extracting markup into components\n- Invoking components\n- Passing content to components\n- Yielding content with the `{{yield}}` keyword\n- Refactoring existing code\n- Writing component tests\n- Using the application template and `{{outlet}}`s\n\n<h3><a href=\"../more-about-components/\">Chapter 5</a></h3>\n\n- Generating components\n- Organizing code with namespaced components\n- Forwarding HTML attributes with `...attributes`\n- Determining the appropriate amount of test coverage\n\n<h3><a href=\"../interactive-components/\">Chapter 6</a></h3>\n\n- Adding behavior to components with classes\n- Accessing instance states from templates\n- Managing state with tracked properties\n- Using conditionals syntaxes in templates\n- Responding to user interaction with actions\n- Invoking element modifiers\n- Testing user interactions\n\n<h3><a href=\"../reusable-components/\">Chapter 7</a></h3>\n\n- Managing application-level configurations\n- Parameterizing components with arguments\n- Accessing component arguments\n- Interpolating values in templates\n- Overriding HTML attributes in `...attributes`\n- Refactoring with getters and auto-track\n- Getting JavaScript values into the test context\n\n<h3><a href=\"../working-with-data/\">Chapter 8</a></h3>\n\n- Working with route files\n- Returning local data from the model hook\n- Accessing route models from templates\n- Mocking server data with static JSON files\n- Fetching remote data from the model hook\n- Adapting server data\n- Loops and local variables in templates with `{{#each}}`\n\nThat's a lot! At this point, you are well equipped to perform a wide variety of development tasks in Ember!\n\nGo ahead and take a break, or experiment with creating your own unique Ember app using the skills you just learned.\n\nWhen you come back, we build upon what we learned in Part 1 and take things to the next level!","description":"Congratulations, you finished the first part of this tutorial! \n\nIt was quite a journey! To recap, here is what you have learned:  Chapter 1 \n\n- Installing Ember CLI\n- Creating a new Ember app with Ember CLI\n- Starting and stopping the development server\n-..."}}}